{"version":3,"sources":["reportWebVitals.js","logo.svg","App.js","login/loginForm.js","login/logintitle.js","login/loginconstant.js","login/login.js","router.js","reducer/authreducer.js","api.js","saga.js","reducer.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","className","type","LoginForm","status","tailLayout","wrapperCol","offset","span","Item","Form","useForm","form","useState","openPopup","setPopup","dispatch","useDispatch","useEffect","resetFields","handleValidate","rules","value","callback","field","length","test","getFieldValue","labelCol","onFinish","e","payload","autoComplete","label","name","required","validator","rule","prefix","UserOutlined","placeholder","Password","LockOutlined","style","color","cursor","onClick","state","htmlType","width","visible","onOk","onCancel","marginTop","LoginTitle","message","handleClick","HEADER_TITLE","PARAGRAPH_TITLE","BUTTON_NAME","loginFormVar","createFormVar","Login","history","signUp","setUser","useref","useRef","animate","count","pos","rightPos","setCount","setInterval","clearInterval","document","querySelector","left","right","ref","Routes","exact","path","component","initialState","token","Axios","require","default","PostData","password","Promise","resolve","reject","post","headers","res","catch","err","authWorker","AuthSaga","saga","action","call","takeEvery","all","fork","sagaMiddleware","createSagaMiddleware","reducer","combineReducers","authreducer","response","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.bdf9238e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport {Button} from 'antd';\n\nexport const App = () =>  {\n  return (\n    <div className=\"App\">\n     \n          <Button type=\"primary\">Button</Button>\n        \n    </div>\n  );\n}","import { Button, Input } from 'antd';\r\nimport { Form } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport Modal from 'antd/lib/modal/Modal';\r\n\r\nexport const LoginForm = ({ status }) => {\r\n    const layout = {\r\n        labelCol: { span: 8 },\r\n        wrapperCol: { span: 16 },\r\n    };\r\n    const tailLayout = {\r\n        wrapperCol: { offset: 8, span: 16 },\r\n    };\r\n    const { Item } = Form;\r\n    const [form] = Form.useForm();\r\n    const [{ openPopup }, setPopup] = useState({\r\n        openPopup: false\r\n    });\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        form.resetFields();\r\n    }, [status]);\r\n\r\n    const handleValidate = (rules, value, callback) => {\r\n        switch (rules.field) {\r\n            case 'name':\r\n                if (!value) {\r\n                    callback('Please Enter Valid Username');\r\n                }\r\n                else if (value.length > 20) {\r\n                    callback('Username should be less than 32 characters');\r\n                }\r\n                else {\r\n                    callback();\r\n                }\r\n                return;\r\n            case 'password':\r\n                if (!value) {\r\n                    callback('Please Enter Valid Password');\r\n                }\r\n                else if (value.length > 20 || value.length < 8) {\r\n                    callback('Password length should be greater than 8 and less than 32');\r\n                }\r\n                else if (!(/[A-Z]/.test(value) && /[a-z]/.test(value) && /\\W/.test(value) && /[0-9]/.test(value) && !(/\\s/.test(value)))) {\r\n                    callback(\"Password Should contain atleast one special character, one digit, Uppercase, lowercase\");\r\n                }\r\n                else {\r\n                    callback();\r\n                }\r\n                return;\r\n            case 'confirm_password':\r\n                if (form.getFieldValue('password') !== value) {\r\n                    callback('Confirm password mismatch password')\r\n                }\r\n                else {\r\n                    callback();\r\n                }\r\n                return;\r\n            default:\r\n                callback();\r\n                return;\r\n        }\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        dispatch({ type: 'token_api', payload: e });\r\n    }\r\n\r\n    const handleOk = () => {\r\n        setPopup(state => ({\r\n            ...state,\r\n            openPopup: false\r\n        }))\r\n    };\r\n\r\n    return (\r\n        <div className=\"form_align\">\r\n            <h1 className=\"login_style\">\r\n                {!status ? 'Sign in to Storage Bucket' : 'Create Account'}\r\n            </h1>\r\n            <Form {...layout} onFinish={handleSubmit} autoComplete=\"off\" form={form}>\r\n                <Item\r\n                    label=\"UserName\"\r\n                    name=\"name\"\r\n                    rules={[{\r\n                        required: true,\r\n                        validator: (rule, value, callback) => handleValidate(rule, value, callback)\r\n                    }]}\r\n                >\r\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n                </Item>\r\n                <Item\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    rules={[{\r\n                        required: true,\r\n                        validator: (rule, value, callback) => handleValidate(rule, value, callback)\r\n                    }]}\r\n                >\r\n                    <Input.Password prefix={<LockOutlined className=\"site-form-item-icon\" />} placeholder=\"Password\" />\r\n                </Item>\r\n                {\r\n                    status ? (\r\n                        <Item\r\n                            label=\"Confirm Password\"\r\n                            name=\"confirm_password\"\r\n                            rules={[{\r\n                                required: true,\r\n                                validator: (rule, value, callback) => handleValidate(rule, value, callback)\r\n                            }]}\r\n                        >\r\n                            <Input.Password autoComplete=\"off\" prefix={<LockOutlined className=\"site-form-item-icon\" />} placeholder=\"Confirm Password\" />\r\n                        </Item>\r\n                    ) : (\r\n                            <Item {...tailLayout}>\r\n                                <span style={{ color: \"blue\", cursor: \"pointer\" }} onClick={() => setPopup(state => ({ ...state, openPopup: true }))}>\r\n                                    Forgot Password ?\r\n                                </span>\r\n                            </Item>\r\n                        )\r\n                }\r\n                <Item {...tailLayout}>\r\n                    <Button htmlType=\"submit\" type=\"primary\" className=\"but_style\" style={{ width: \"40%\" }}>\r\n                        {!status ? 'login' : 'signup'}\r\n                    </Button>\r\n                </Item>\r\n            </Form>\r\n            {\r\n                !status && openPopup && (\r\n                    <Modal\r\n                        visible={openPopup}\r\n                        onOk={handleOk}\r\n                        onCancel={() => setPopup(state => ({ ...state, openPopup: false }))}\r\n\r\n                    >\r\n                        <Input\r\n                            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                            placeholder=\"UserName\"\r\n                            style={{ marginTop: \"10%\" }}\r\n                        />\r\n                    </Modal>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}","import { Button } from \"antd\";\r\n\r\nexport const LoginTitle = ({message, handleClick}) => {\r\n    return (\r\n        <div className=\"set_padding\">\r\n            <h1 style={{ color: \"white\" }}>\r\n                {message.HEADER_TITLE}\r\n            </h1>\r\n            <p style={{width: \"15em\"}}>\r\n                {message.PARAGRAPH_TITLE}\r\n            </p>\r\n            <Button type=\"primary\" className=\"but_style\" onClick={()=>handleClick()}>\r\n                {message.BUTTON_NAME}\r\n            </Button>\r\n        </div>\r\n    )\r\n}","const loginFormVar = {\r\n    HEADER_TITLE: \"Hi Friend!\",\r\n    PARAGRAPH_TITLE: \"Enter Your Personal Details to SignUp\",\r\n    BUTTON_NAME: \"SignUp\"\r\n}\r\n\r\nconst createFormVar = {\r\n    HEADER_TITLE: \"Welcome Back!\",\r\n    PARAGRAPH_TITLE: \"To keep connected with us please login with your personal info\",\r\n    BUTTON_NAME: \"Sign In\"\r\n}\r\n\r\nexport {loginFormVar, createFormVar};","import { Button } from 'antd';\r\nimport React, { useRef, useState } from 'react';\r\n//import { CreateLogin } from './createLogin';\r\nimport { LoginForm } from './loginForm';\r\nimport './login.scss';\r\nimport { LoginTitle } from './logintitle';\r\nimport { createFormVar, loginFormVar } from './loginconstant';\r\n\r\nexport const Login = ({ history }) => {\r\n    const [{ signUp }, setUser] = useState({\r\n        signUp: false\r\n    });\r\n\r\n    let useref = useRef();\r\n\r\n    const handleClick = () => {\r\n        let position = document.querySelector('.left_pane').style.left || '0px';\r\n        switch (position) {\r\n            case '0px':\r\n                let Inc = 0;\r\n                animate(Inc, 'moveLeft', 0);\r\n                break;\r\n            case '560px':\r\n                let Dec = 560\r\n                animate(Dec, 'moveRight', 280);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const animate = (count, pos, rightPos) => {\r\n        let setCount = setInterval(() => {\r\n            if (count === (pos === 'moveLeft' ? 560 : 0)) {\r\n                setUser(state => ({\r\n                    ...state,\r\n                    signUp: !state.signUp\r\n                }))\r\n                clearInterval(setCount);\r\n            }\r\n            else {\r\n                document.querySelector('.left_pane').style.left = (pos === 'moveLeft' ? ++count : --count) + 'px';\r\n\r\n            }\r\n            if ((pos === 'moveLeft' && rightPos !== 280) || (pos === 'moveRight' && rightPos !== 0)) {\r\n                document.querySelector('.right_pane').style.right = (pos === 'moveLeft' ? ++rightPos : --rightPos) + 'px';\r\n            }\r\n\r\n        }, 2)\r\n    }\r\n\r\n    return (\r\n        <div className=\"Container\" >\r\n            {/* <Button type=\"primary\" onClick={() =>\r\n                history.push('Dashboard')\r\n            }>  \r\n                Click Dashboard\r\n            </Button> */}\r\n            <div className=\"left_pane\">\r\n                <LoginTitle message={!signUp ? loginFormVar : createFormVar} handleClick={handleClick} />\r\n            </div>\r\n            <div className=\"right_pane\">\r\n                <LoginForm ref={useref} status={signUp} />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { App } from './App';\r\nimport { Login } from './login/login';\r\n\r\nexport const Routes = () => (\r\n    <Switch>\r\n        <Route exact path=\"/\" component={Login} />\r\n        <Route path=\"/Dashboard\" component={App} />\r\n    </Switch>\r\n)\r\n","const initialState = {\r\n    token: ''\r\n}\r\n\r\nexport const authreducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case 'token':\r\n            return {\r\n                ...state,\r\n                token: action.response\r\n            }\r\n        default:\r\n            return state;    \r\n\r\n    }\r\n}","const { default: Axios } = require(\"axios\")\r\n\r\nconst PostData = ({ name, password }) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n        Axios.post(`http://localhost:4000/token`, { name, password }, {\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n        }).then(res => {\r\n            resolve(res)\r\n        }).catch(err => {\r\n            debugger\r\n            reject(err)\r\n        })\r\n    })\r\n}\r\n\r\nexport { PostData }","import Axios from 'axios';\r\nimport { all, takeLatest, takeEvery, fork, put, call } from 'redux-saga/effects';\r\nimport { PostData } from './api';\r\n\r\nfunction* authWorker(action) {\r\n    const response = yield call(PostData, action.payload);\r\n    \r\n}\r\n\r\nfunction* AuthSaga() {\r\n    yield takeEvery(\r\n        'token_api', authWorker\r\n    )\r\n}\r\n\r\nexport default function* saga() {\r\n    yield all([fork(AuthSaga)])\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { authreducer } from './reducer/authreducer';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport saga from './saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\n\r\nconst reducer = combineReducers({\r\n    authreducer\r\n});\r\n\r\nexport default createStore(reducer, applyMiddleware(sagaMiddleware));\r\n\r\nsagaMiddleware.run(saga);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Routes } from './router';\nimport { Provider } from 'react-redux';\nimport store from './reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <Routes />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}